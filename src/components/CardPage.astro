---
const { card, userCard, userBonus } = Astro.props
---

<div class="mx-4">
	<div class="max-w-xl grid grid-cols-1 md:grid-cols-3 md:gap-x-12 m-auto my-12">
		<div class="text-slate-700 grid gap-x-4 grid-cols-3 md:block">
			<img
				class="mb-4 shadow rounded-sm order-last md:order-first"
				src={"https://www.bungie.net" + card.highResolution.image.sheetPath}
			/>
			<div class="col-span-2 mb-7">
			<h1 class="font-bold leading-snug mb-[2px]" set:html={card.cardName} />
			<div class="text-sm text-slate-700">
				<div>
					Carte
					{
						card.rarity == 1
							? "commune"
							: card.rarity == 2
								? "légendaire"
								: "exotique"
					}
				</div>
				{card.points > 0 && <div>{card.points} points</div>}
				{
					card.statisticCollection && (
						<h2 class="font-bold mt-4">Statistiques</h2>
						<ul>
							{card.statisticCollection.map((stat:any) => {
                                const hasStats = Boolean(userCard?.statisticCollection)
								const userStat = userCard?.statisticCollection.find((s:any) => s.statNumber == stat.statNumber)
								return (
								<li>
									{stat.statName}
									{hasStats && (userStat ? (
										<>: <span class="text-green-600">{userStat.displayValue}</span></>
									) : <span class="text-slate-400">Privé</span>)}
									{stat.rankCollection && (
										<ul class="pl-4">
											{stat.rankCollection.map((rank: any) => {
												const userRank = userStat?.rankCollection?.find((r:any) => r.rank == rank.rank)
												return (
												<li class:list={{"text-green-600": userRank, "text-slate-400": userStat && !userRank}}>
													{rank.threshold} // {rank.points} points
												</li>
											)})}
										</ul>
									)}
								</li>
							)})}
						</ul>
					)
				}
				{
					userBonus && (
						<h2 class="font-bold mt-4">Bonus</h2>
						<h3 class:list={["font-medium", {"text-slate-400": userBonus.value < userBonus.threshold, "text-green-600": userBonus.value >= userBonus.threshold}]}>{userBonus.bonusName}</h3>
						<p>{userBonus.bonusDescription}</p>
						<p>Débloqué en atteignant le <span class:list={{"text-slate-400": userBonus.value < userBonus.threshold, "text-green-600": userBonus.value >= userBonus.threshold}}>rang {userBonus.bonusRank.rank} de {card.statisticCollection.find((s: any) => s.statNumber == userBonus.bonusRank.statId).statName}</span>.</p>
				)
				}
			</div>
			</div>
		</div>
		<div class="col-span-2 text-slate-950">
			{card.cardIntro && <div class="mb-7 text-slate-700"><p set:html={card.cardIntro} />
			{card.cardIntroAttribution && <p set:html={card.cardIntroAttribution} />}</div>}
			{
				card.cardDescription && (
					<p class="card-description font-serif text-lg" set:html={card.cardDescription} />
				)
			}
		</div>
	</div>