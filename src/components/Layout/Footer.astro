---
import {
	deconstructUrl,
	membershipTypeToPath,
	validateCookie,
} from "$utils/helpers"
import { useTranslations, type SupportedLocale } from "$utils/i18n"
import { getRelativeLocaleUrl } from "astro:i18n"
import LinkButton from "$components/Layout/LinkButton.astro"
import MiniLoginForm from "$components/User/MiniLoginForm.astro"
import Username from "$components/User/Username.astro"

export type FooterProps = {
	onGrimoireSection?: boolean
	onGrimoirePage?: boolean
	userInPath?: {
		membershipType: 1 | 2
		membershipId: string
		name: string
	}
}

type Props = {
	locale: SupportedLocale
	pathname: string
} & FooterProps

const { locale, onGrimoireSection, onGrimoirePage, userInPath } = Astro.props
const onGrimoire = onGrimoireSection || onGrimoirePage

const hrefLocale = locale == "en" ? "" : `${locale}/`
const pathname =
	locale == "en"
		? Astro.props.pathname
		: Astro.props.pathname.replace(`/${locale}`, "")
const pathnameRest = deconstructUrl(pathname).rest
const t = useTranslations(locale)

const tryCookie = Astro.cookies.get("grimoireLogin")
const cookie = validateCookie(tryCookie?.json())
if (tryCookie && !cookie) {
	console.warn("Deleting invalid cookie:", cookie)
	Astro.cookies.delete("grimoireLogin", { path: "/" })
}

const isUserPage =
	cookie && userInPath && cookie.membershipId == userInPath.membershipId
---

<div class="bg-slate-200 px-4 py-12">
	<div
		class="m-auto flex max-w-xl flex-col gap-4 text-sm font-medium text-slate-500"
	>
		{
			userInPath
				? (!cookie || !isUserPage) && (
						<>
							<div>
								{t("data-from")}
								<a
									href={`/${hrefLocale}user/${membershipTypeToPath(userInPath.membershipType)}/${userInPath.name}`}
									class="-mx-[1px] -my-[1px] rounded-md px-1 py-[1px] ring-1 ring-slate-300 transition hover:bg-slate-100"
								>
									{t("collection-of")}
									<Username
										membershipType={
											userInPath.membershipType
										}
										membershipId={userInPath.membershipId}
										username={userInPath.name}
									/>
								</a>
							</div>
						</>
					)
				: onGrimoire && (
						<>
							<div>{t("global-data")}</div>
							{onGrimoireSection && (
								<LinkButton href={`/${hrefLocale}all`}>
									{t("back-to-grimoire")}
								</LinkButton>
							)}
						</>
					)
		}
		{
			onGrimoire &&
				(cookie ? (
					<>
						{!(onGrimoirePage && isUserPage) && (
							<LinkButton
								href={
									isUserPage
										? `/${hrefLocale}user/${membershipTypeToPath(userInPath.membershipType)}/${userInPath.name}`
										: `/${hrefLocale}user/${membershipTypeToPath(cookie.membershipType)}/${cookie.username}${pathnameRest}`
								}
							>
								<div>
									{isUserPage
										? t("back-to-grimoire")
										: t("switch-to-your-collection")}
								</div>
								<Username
									membershipType={cookie.membershipType}
									membershipId={cookie.membershipId}
									username={cookie.username}
								/>
							</LinkButton>
						)}
						<LinkButton
							href={getRelativeLocaleUrl(
								locale,
								`/logout?redirect=${pathnameRest}`,
							)}
						>
							{t("logout")}
						</LinkButton>
					</>
				) : (
					<>
						<div class="font-smcp text-base leading-relaxed">
							{t("browse-yours")}
						</div>
						<MiniLoginForm {locale} redirect={pathnameRest} />
					</>
				))
		}
		{!onGrimoire && <LinkButton href="/">{t("Home")}</LinkButton>}
	</div>
</div>
